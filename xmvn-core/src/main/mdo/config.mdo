<?xml version="1.0" encoding="US-ASCII"?>
<!--
 ! Copyright (c) 2013 Red Hat, Inc.
 !
 ! Licensed under the Apache License, Version 2.0 (the "License");
 ! you may not use this file except in compliance with the License.
 ! You may obtain a copy of the License at
 !
 !     http://www.apache.org/licenses/LICENSE-2.0
 !
 ! Unless required by applicable law or agreed to in writing, software
 ! distributed under the License is distributed on an "AS IS" BASIS,
 ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ! See the License for the specific language governing permissions and
 ! limitations under the License.
 `-->
<model xmlns="http://modello.codehaus.org/MODELLO/1.4.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://modello.codehaus.org/MODELLO/1.4.0
			   http://modello.codehaus.org/xsd/modello-1.4.0.xsd">
  <id>config</id>
  <name>Configuration</name>
  <description>
    <![CDATA[
	     <p>This is a reference for the configuration for XMvn.</p>
    ]]>
  </description>
  <defaults>
    <default>
      <key>package</key>
      <value>org.fedoraproject.maven.config</value>
    </default>
  </defaults>
  <classes>

    <class>
      <name>BuildSettings</name>
      <version>0.4.0+</version>
      <description>Basic build settings.</description>
      <fields>
        <field>
          <name>debug</name>
          <version>0.4.0+</version>
          <description>
	    Whether detailed debugging information about the build
	    process should be logged.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>skipTests</name>
          <version>0.4.0+</version>
          <description>
	    Whether compilation and execution of unit and integration tests should be skipped.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>compilerSource</name>
          <version>0.4.0+</version>
          <description>
	    Compatibility version of Java sources in the reactor. If
	    not specified then it defaults to 1.5 or whatever is
	    specified in configuration of Maven Compiler Plugin.
          </description>
          <type>String</type>
        </field>
      </fields>
      <codeSegments>
	<codeSegment>
	  <version>0.4.0+</version>
	  <code>
	    <![CDATA[
    /**
     * Return whether detailed debugging information about the build process should be logged.
     */
    public boolean isDebug()
    {
        return Boolean.valueOf( debug );
    }

    /**
     * Set whether detailed debugging information about the build process should be logged.
     * @param debug
     */
    public void setDebug( boolean debug )
    {
        this.debug = String.valueOf( debug );
    }

    /**
     * Return whether compilation and execution of unit and integration tests should be skipped.
     */
    public boolean isSkipTests()
    {
        return Boolean.valueOf( skipTests );
    }

    /**
     * Set whether compilation and execution of unit and integration tests should be skipped.
     * @param skipTests
     */
    public void setSkipTests( boolean skipTests )
    {
        this.skipTests = String.valueOf( skipTests );
    }
	    ]]>
	  </code>
	</codeSegment>
      </codeSegments>
    </class>

    <class>
      <name>Property</name>
      <version>0.4.0+</version>
      <description>
	This element describes Java system property along with its
	value.
      </description>
      <fields>
        <field>
          <name>name</name>
          <version>0.4.0+</version>
	  <required>true</required>
          <description>Name of the property.</description>
          <type>String</type>
        </field>
        <field>
          <name>value</name>
          <version>0.4.0+</version>
	  <required>true</required>
          <description>Value of the property.</description>
          <type>String</type>
        </field>
      </fields>
    </class>

    <class xml.tagName="artifact">
      <name>Artifact</name>
      <version>0.4.0+</version>
      <description>Identifier of Maven artifact.</description>
      <fields>
        <field>
          <name>groupId</name>
          <version>0.4.0+</version>
          <description>Group ID of the artifact.</description>
          <type>String</type>
        </field>
        <field>
          <name>artifactId</name>
          <version>0.4.0+</version>
	  <required>true</required>
          <description>Artifact ID of the artifact.</description>
          <type>String</type>
        </field>
        <field>
          <name>version</name>
          <version>0.4.0+</version>
          <description>Version of the artifact.</description>
          <type>String</type>
        </field>
        <field xml.transient="true">
          <name>extension</name>
          <version>0.4.0+</version>
          <description>Extension of the artifact.</description>
          <type>String</type>
	  <defaultValue>pom</defaultValue>
        </field>
      </fields>
    </class>

    <class xml.tagName="rule">
      <name>PackagingRule</name>
      <version>0.4.0+</version>
      <description>Identification of Maven Artifact.</description>
      <fields>
        <field>
          <name>artifactGlob</name>
          <version>0.4.0+</version>
	  <required>true</required>
          <description>Pattern specifying one or more Maven artifacts.</description>
	  <association>
            <type>Artifact</type>
	  </association>
        </field>
        <field>
          <name>targetPackage</name>
          <version>0.4.0+</version>
          <description>Name of binary package into which artifacts are assigned.</description>
          <type>String</type>
        </field>
        <field>
          <name>files</name>
          <version>0.4.0+</version>
          <description>Files holding the artifact.</description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>aliases</name>
          <version>0.4.0+</version>
          <description>Alternative identifiers of artifacts.</description>
	  <!-- Modello would generate methods addAliase() and removeAliase()
	       instead of addAlias() and removeALias(). To workaround this we
	       skip generating of adders and generate them manually. -->
          <association xml.tagName="alias" java.adder="false">
            <type>Artifact</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
      <codeSegments>
	<codeSegment>
	  <version>0.4.0+</version>
	  <code>
	    <![CDATA[
    /**
     * Add an alias.
     * @param artifact alias to be added
     */
    public void addAlias( Artifact artifact )
    {
        getAliases().add( artifact );
    }

    /**
     * Remove an alias.
     * @param artifact alias to be removed
     */
    public void removeAlias( Artifact artifact )
    {
        getAliases().remove( artifact );
    }
	    ]]>
	  </code>
	</codeSegment>
      </codeSegments>
    </class>

    <class>
      <name>InstallerSettings</name>
      <version>0.4.0+</version>
      <description>XMvn settings related to installation of artifacts.</description>
      <fields>
        <field>
          <name>packageName</name>
          <version>0.4.0+</version>
          <description>
            Name of the source package as part of which reactor will
            be installed.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>skipProvides</name>
          <version>0.4.0+</version>
          <description>
            Whether generation of package provides should be skipped.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>skipRequires</name>
          <version>0.4.0+</version>
          <description>
            Whether generation of package requires should be skipped.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>jarDir</name>
          <version>0.4.0+</version>
	  <required>true</required>
          <description>
	    Directory into which platform-independant JAR files are be
	    installed.
	  </description>
          <type>String</type>
        </field>
        <field>
          <name>jniDir</name>
          <version>0.4.0+</version>
	  <required>true</required>
          <description>
	    Directory into which platform-dependant JAR files are be
	    installed.
	  </description>
          <type>String</type>
        </field>
        <field>
          <name>pomDir</name>
          <version>0.4.0+</version>
	  <required>true</required>
          <description>
	    Directory into which POM files are be installed.
	  </description>
          <type>String</type>
        </field>
        <field>
          <name>metadataDir</name>
          <version>0.4.0+</version>
	  <required>true</required>
          <description>
	    Directory into which XMvn metadata files are be installed.
	  </description>
          <type>String</type>
        </field>
      </fields>
      <codeSegments>
	<codeSegment>
	  <version>0.4.0+</version>
	  <code>
	    <![CDATA[
    /**
     * Return whether generation of package provides should be skipped.
     */
    public boolean isSkipProvides()
    {
        return Boolean.valueOf( skipProvides );
    }

    /**
     * Set whether generation of package provides should be skipped.
     * @param skipProvides
     */
    public void setSkipProvides( boolean skipProvides )
    {
        this.skipProvides = String.valueOf( skipProvides );
    }

    /**
     * Return whether generation of package requires should be skipped.
     */
    public boolean isSkipRequires()
    {
        return Boolean.valueOf( skipRequires );
    }

    /**
     * Set whether generation of package requires should be skipped.
     * @param skipRequires
     */
    public void setDebug( boolean skipRequires )
    {
        this.skipRequires = String.valueOf( skipRequires );
    }
	    ]]>
	  </code>
	</codeSegment>
      </codeSegments>
    </class>

    <class>
      <name>ResolverSettings</name>
      <version>0.4.0+</version>
      <description>XMvn settings related to resolution of artifacts.</description>
      <fields>
        <field>
          <name>debug</name>
          <version>0.4.0+</version>
          <description>
	    Whether detailed debugging information about artifact
	    resolution process should be logged.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>localRepositories</name>
          <version>0.4.0+</version>
          <description>
	    List of local repositories where XMvn will look for artifacts.
          </description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>jarRepositories</name>
          <version>0.4.0+</version>
          <description>
	    List of system repositories where XMvn will look for JAR files.
          </description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>pomRepositories</name>
          <version>0.4.0+</version>
          <description>
	    List of system repositories where XMvn will look for POM
	    files.
          </description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>metadataRepositories</name>
          <version>0.4.0+</version>
          <description>
	    List of repositories where XMvn will look for metadata
	    files.
          </description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>prefixes</name>
          <version>0.4.0+</version>
          <description>
	    List of prefixes that XMvn resolver will prepend to system
	    repositories.
          </description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>blacklist</name>
          <version>0.4.0+</version>
          <description>
	    List of blacklisted artifacts which will not be resolved.
          </description>
          <association>
            <type>Artifact</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
      <codeSegments>
	<codeSegment>
	  <version>0.4.0+</version>
	  <code>
	    <![CDATA[
    /**
     * Return whether detailed debugging information about artifact resolution process should be logged.
     */
    public boolean isDebug()
    {
        return Boolean.valueOf( debug );
    }

    /**
     * Set whether detailed debugging information about artifact resolution process should be logged.
     * @param debug
     */
    public void setDebug( boolean debug )
    {
        this.debug = String.valueOf( debug );
    }
	    ]]>
	  </code>
	</codeSegment>
      </codeSegments>
    </class>

    <class rootElement="true" xml.tagName="configuration">
      <name>Configuration</name>
      <version>0.4.0+</version>
      <description>
        Root element of the configuration file.
      </description>
      <fields>

        <field>
          <name>properties</name>
          <version>0.4.0+</version>
          <description>
            This element lists system Java properties that should be set before XMvn build is started.
          </description>
          <association>
            <type>Property</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>

        <field>
          <name>buildSettings</name>
          <version>0.4.0+</version>
          <description>
            This element contains basic XMvn settings.
          </description>
          <association>
            <type>BuildSettings</type>
          </association>
        </field>

        <field>
          <name>artifactManagement</name>
          <version>0.4.0+</version>
          <description>
            This element configures how artifacts should be assigned
            to individual packages.
          </description>
          <association>
            <type>PackagingRule</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>

        <field>
          <name>resolverSettings</name>
          <version>0.4.0+</version>
          <description>
            This element contains configuration of XMvn resolver.
          </description>
          <association>
            <type>ResolverSettings</type>
          </association>
        </field>

        <field>
          <name>installerSettings</name>
          <version>0.4.0+</version>
          <description>
            This element contains configuration of XMvn installer.
          </description>
          <association>
            <type>InstallerSettings</type>
          </association>
        </field>

      </fields>
      <codeSegments>
	<codeSegment>
	  <version>0.4.0+</version>
	  <code>
	    <![CDATA[
    /**
     * Create an effective packaging rule for specified artifact.
     * @param groupId
     * @param artifactId
     * @param verson
     */
    public PackagingRule createEffectivePackagingRule( String groupId, String artifactId, String version )
    {
        return new EffectivePackagingRule( artifactManagement, groupId, artifactId, version );
    }
	    ]]>
	  </code>
	</codeSegment>
      </codeSegments>
    </class>
  </classes>
</model>
